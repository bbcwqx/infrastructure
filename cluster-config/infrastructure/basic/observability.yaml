apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: opentelemetry
  namespace: observability
spec:
  interval: 5m
  url: https://open-telemetry.github.io/opentelemetry-helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otel-agent
  namespace: observability
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.134.0"
      sourceRef:
        kind: HelmRepository
        name: opentelemetry
      interval: 5m
  releaseName: otel-agent
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    mode: daemonset

    image:
      repository: otel/opentelemetry-collector-k8s

    presets:
      kubernetesAttributes:
        enabled: true
      kubeletMetrics:
        enabled: true
      logsCollection:
        enabled: true

    config:
      processors:
        resource/clusterName:
          attributes:
            - action: insert
              key: k8s.cluster.name
              value: "cluster"

      exporters:
        otlp:
          endpoint: "otel-collector-opentelemetry-collector:4317"
          tls:
            insecure: true

      service:
        pipelines:
          traces:
            exporters: [otlp]
          metrics:
            exporters: [otlp]
          logs:
            exporters: [otlp]
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otel-collector
  namespace: observability
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.134.0"
      sourceRef:
        kind: HelmRepository
        name: opentelemetry
      interval: 5m
  releaseName: otel-collector
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    mode: deployment

    image:
      repository: otel/opentelemetry-collector-k8s

    presets:
      clusterMetrics:
        enabled: true
      kubernetesEvents:
        enabled: true

    config:
      receivers:
        jaeger: null
        prometheus: null
        zipkin: null
        otlp:
          protocols:
            grpc:
              endpoint: "0.0.0.0:4317"
            http:
              endpoint: "0.0.0.0:4318"

      processors:
        resource/k8sEvents:
          attributes:
            - action: insert
              key: k8s.cluster.name
              value: "cluster"
            - action: upsert
              key: service.name
              value: "integrations/kubernetes/eventhandler"

      exporters:
        otlphttp:
          endpoint: "https://otlp-gateway-prod-us-east-2.grafana.net/otlp"
          headers:
            authorization: ${env:OTEL_AUTH_HEADER}

      service:
        pipelines:
          traces:
            exporters: [otlphttp]
          metrics:
            exporters: [otlphttp]
          logs:
            exporters: [otlphttp]

    extraEnvs:
      - name: OTEL_AUTH_HEADER
        valueFrom:
          secretKeyRef:
            name: otel-collector
            key: OTEL_AUTH_HEADER
